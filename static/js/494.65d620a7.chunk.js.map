{"version":3,"file":"static/js/494.65d620a7.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  gap: 10px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Form } from './ContactForm.styled';\nimport { addContacts } from 'redux/contacts/operations';\nimport { getContacts } from '../../redux/contacts/contactsSlice';\n\nexport const ContactForm = () => {\n  const [formValue, setFormValue] = useState({ name: '', number: '' });\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = evt =>\n    setFormValue(val => ({ ...val, [evt.target.name]: evt.target.value }));\n\n  const checkContacts = data => {\n    const findContact = contacts.some(contact => contact.name === data.name);\n\n    if (findContact) {\n      return alert(`${data.name} is already in contacts`);\n    }\n    console.log(data);\n    dispatch(addContacts({ ...data }));\n  };\n\n  const handleSubmitForm = evt => {\n    evt.preventDefault();\n    checkContacts(formValue);\n    setFormValue({ name: '', number: '' });\n  };\n\n  const { name, number } = formValue;\n\n  return (\n    <>\n      <Form onSubmit={handleSubmitForm}>\n        <TextField\n          id=\"outlined-password-input\"\n          label=\"Name\"\n          type=\"name\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <TextField\n          id=\"outlined-password-input\"\n          label=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleChange}\n          required\n        />\n\n        <Button variant=\"contained\" type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    </>\n  );\n};\n","// import Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport Divider from '@mui/material/Divider';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport { deleteContacts } from '../../redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/contactsSlice';\nimport { filterContacts, getFilter } from '../../redux/contacts/filterSlice';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  const handleFilterChange = evt => {\n    dispatch(filterContacts(evt.target.value));\n  };\n  const filteredContacts = contacts.filter(text =>\n    text.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      <TextField\n        id=\"outlined-password-input\"\n        label=\"Filter contacts by name\"\n        type=\"text\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n\n      <List>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ListItem\n            divider\n            sx={{ display: 'flex' }}\n            disableGutters\n            key={id}\n            secondaryAction={\n              <IconButton\n                onClick={() => dispatch(deleteContacts(id))}\n                aria-label=\"delete\"\n              >\n                <DeleteIcon />\n              </IconButton>\n            }\n          >\n            <Divider />\n            <ListItemText primary={`${name}:`} />\n            <Divider />\n            <ListItemText primary={`(${number})`} />\n            <Divider />\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIsLoading } from 'redux/contacts/contactsSlice';\nimport Typography from '@mui/material/Typography';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport Container from '@mui/material/Container';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { ContactsList } from './../components/ContactsList/ContactsList';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Typography variant=\"h2\" sx={{ mb: 2 }}>\n          Phonebook\n        </Typography>\n        <ContactForm />\n\n        <div>\n          {isLoading && (\n            <CircularProgress\n              size={60}\n              sx={{\n                zIndex: 1,\n              }}\n            />\n          )}\n        </div>\n        <Typography variant=\"h2\" sx={{ mb: 4, mt: 4 }}>\n          Contacts\n        </Typography>\n        <ContactsList />\n      </Container>\n    </>\n  );\n}\n"],"names":["Form","styled","ContactForm","useState","name","number","formValue","setFormValue","dispatch","useDispatch","contacts","useSelector","getContacts","handleChange","evt","val","target","value","onSubmit","preventDefault","data","some","contact","alert","console","log","addContacts","checkContacts","TextField","id","label","type","onChange","pattern","title","required","Button","variant","ContactsList","filter","getFilter","filteredContacts","text","toLowerCase","includes","filterContacts","List","map","ListItem","divider","sx","display","disableGutters","secondaryAction","IconButton","onClick","deleteContacts","Delete","Divider","ListItemText","primary","Contacts","isLoading","getIsLoading","useEffect","fetchContacts","Container","flexDirection","alignItems","Typography","mb","CircularProgress","size","zIndex","mt"],"sourceRoot":""}